/* General Body and App Container */
body {
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* Align to top for scroll if content exceeds viewport */
  align-items: center;
  min-height: 100vh;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  font-family: 'Helvetica Neue', Arial, sans-serif;
  margin: 0;
  padding: 20px 0;
  box-sizing: border-box;
}

.app-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  max-width: 1200px; /* Max width for the whole app */
  gap: 15px; /* Space between major sections */
  position: relative; /* For stacking context of modal */
}

/* NEW: Top Bar Styling */
#top-bar {
  display: flex;
  justify-content: space-between; /* Pushes controls left, timer right */
  align-items: center;
  width: 100%;
  max-width: 454px; /* Match SudokuGrid width (450px + 2px border left + 2px border right) */
                     /* Or 500px if #canvas-container is the target width */
                     /* Adjust this based on the exact width of your .sudoku-grid */
  padding: 0; /* No padding for the bar itself, children will handle spacing */
  margin-bottom: 15px; /* Space between top-bar and game-area */
  box-sizing: border-box;
}

#top-bar-controls {
  display: flex;
  gap: 10px; /* Space between the New Game and Check Solution buttons */
  flex-grow: 1; /* Allows this container to take up space */
}

#top-bar .glossy-button { /* Targets buttons specifically within the top bar */
  padding: 10px 15px; /* Adjust padding as needed for visual balance */
  font-size: 0.9em;   /* Slightly smaller font if needed */
  flex-grow: 1;       /* Make buttons share the space within #top-bar-controls */
  min-width: 0;       /* Allow buttons to shrink if necessary */
  text-align: center;
  /* Remove fixed min-width if it was previously set for glossy-button */
}

.timer-display { /* Timer specific adjustments */
  font-size: 0.9em; /* Make timer font slightly larger or as desired */
  font-weight: 400;
  color: #333;
  padding: 10px 15px; /* Match button padding for alignment */
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 20px; /* Match button radius for consistency */
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.08);
  margin-left: 10px; /* Space between last button and timer */
  white-space: nowrap; /* Prevent timer text from wrapping */
  flex-shrink: 0; /* Prevent timer from shrinking if buttons need more space */
}


/* Game Area (Sudoku Grid + Message) */
#game-area {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  background-color: rgba(255, 255, 255, 0.75);
  padding: 20px; /* Padding around the grid */
  border-radius: 15px;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  width: 100%;
  /* max-width of game-area should be wider than the grid if it has padding */
  /* e.g., if grid is 454px, and padding is 20px left/right, game-area max-width is 494px */
  max-width: calc(454px + 40px); /* 454px for grid + 20px padding left/right */
  box-sizing: border-box;
}

#canvas-container {
  position: relative;
  width: 450px;  /* Fixed width for the canvas that SudokuGrid is in */
  height: 450px; /* Fixed height */
  /* max-width: 100%; Ensure it fits within game-area padding if game-area is responsive */
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Main Content Wrapper for Blur Effect */
#main-content-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px; /* Consistent spacing */
  width: 100%;
  transition: filter 0.3s ease-in-out;
}

#main-content-wrapper.blurred {
  filter: blur(5px);
  pointer-events: none; /* Prevent interaction with blurred content */
}

/* Timer Display */
.timer-display {
  font-size: 0.95em;
  font-weight: 600;
  color: #333;
  padding: 10px 18px;
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 20px;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.08);
  margin-top: 0; /* Removed specific margin, gap handles it */
}

/* Game Area (Sudoku Grid + Message) */
#game-area {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px; /* Space between grid and message */
  background-color: rgba(255, 255, 255, 0.75);
  padding: 20px;
  border-radius: 15px;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  width: 100%;
  max-width: 540px; /* Controls max width of this section */
  box-sizing: border-box;
}

#canvas-container {
  position: relative;
  width: 500px; /* Default size, can be overridden by max-width */
  height: 500px; /* Default size */
  max-width: 100%; /* Ensure it fits within game-area padding */
  /* max-height: 80vw; Removed as it might conflict with width/height square aspect */
  display: flex;
  justify-content: center;
  align-items: center;
}

#canvas-container canvas {
  /* Assuming SudokuGrid renders a canvas or a div styled like one */
  max-width: 100%;
  max-height: 100%;
  height: auto; /* Maintain aspect ratio */
  border-radius: 8px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
}
/* If SudokuGrid is a div, style its .sudoku-grid class */
.sudoku-grid {
  background-color: #fff;
  user-select: none; /* Prevent text selection */
  /* width and height for .sudoku-grid are set inline in SudokuGrid.jsx */
  /* these can be percentages to be responsive within #canvas-container */
  /* e.g., width: 100%; height: 100%; */
}

/* Message Area */
#message-area {
  width: 100%;
  text-align: center;
  min-height: 30px;
  font-size: 22px;
  font-weight: bold;
  transition: all 0.3s ease;
  transform: translateZ(0);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  position: relative;
  z-index: 10;
}
#message-area.won {
  color: #28a745;
  text-shadow: 0 0 2px rgba(40, 167, 69, 0.5);
}
#message-area.failed {
  color: #dc3545;
  text-shadow: 0px 0px 2px rgba(220, 53, 69, 0.5);
}
#message-area.playing {
  color: transparent;
}

/* Existing Glossy Styles (ensure they are present and potentially tweak if needed) */
.glossy-button,
.glossy-select {
  padding: 10px 18px; /* Default padding */
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 20px; /* Slightly less rounded for a more modern feel? Or keep 20px */
  font-size: 14px;    /* Default font size */
  font-weight: 500;
  color: #333;
  cursor: pointer;
  background: linear-gradient(to bottom, #ffffff 0%, #f1f1f1 100%);
  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.05),
    inset 0 1px 0 rgba(255, 255, 255, 0.5);
  transition: all 0.2s ease-out;
  outline: none;
}
.glossy-button:hover,
.glossy-select:hover {
  background: linear-gradient(to bottom, #f9f9f9 0%, #e9e9e9 100%);
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.08),
    inset 0 1px 0 rgba(255, 255, 255, 0.5);
  transform: translateY(-1px);
}
.glossy-button:active {
  background: linear-gradient(to bottom, #e9e9e9 0%, #f1f1f1 100%);
  box-shadow: inset 0 2px 3px rgba(0, 0, 0, 0.1);
  transform: translateY(1px);
}
.glossy-button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background: #e0e0e0;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05);
  transform: none;
}
.glossy-select {
  padding-right: 30px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-image: url('data:image/svg+xml;charset=US-ASCII,<svg width="12" height="8" viewBox="0 0 12 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.41 0.589996L6 5.17L10.59 0.589996L12 2L6 8L0 2L1.41 0.589996Z" fill="%23555"/></svg>');
  background-repeat: no-repeat;
  background-position: right 12px center;
}

/* Cell and SudokuGrid specific styles (ensure they are compatible) */
/* Cell and SudokuGrid specific styles (ensure they are compatible) */
.cell {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  border: 1px solid #ddd; /* Default border for all sides */
  /* NEW: Adjust default border if outer grid handles it, or remove top/left for first-row/col cells */
  /* For instance, if the SudokuGrid container has a 2px border,
     cells on the edge might not need their own outer border.
     The `borderTop: none` and `borderLeft: none` in Cell.jsx for r=0/c=0 handles this if
     the SudokuGrid div has a border.
     If you want individual cells to complete the border:
     border-top: 1px solid #ddd;
     border-left: 1px solid #ddd;
     The `border: 1px solid #ddd;` above covers all sides by default.
     The inline styles `borderTop: none` and `borderLeft: none` for cells at row 0 or col 0
     will remove the top/left border for those cells, relying on the SudokuGrid container's border.
     This is a common approach.
  */
  box-sizing: border-box;
  transition: background-color 0.1s ease-in-out;
  position: relative;
}

/* NEW Styles for subgrid borders */
.cell.subgrid-border-right {
  border-right: 2px solid #555 !important;
}

.cell.subgrid-border-bottom {
  border-bottom: 2px solid #555 !important;
}

/* Optional: Styles for first row/column cells if you removed their top/left borders */
/* And the SudokuGrid container doesn't have its own border, or you want to ensure it.
   If SudokuGrid has its own border, these specific rules might not be needed,
   as the cell's default border or lack thereof (from inline style) will combine with the grid border.
*/
/*
.cell.first-row-cell {
  border-top: 2px solid #333 !important; // Assuming matches SudokuGrid border
}
.cell.first-col-cell {
  border-left: 2px solid #333 !important; // Assuming matches SudokuGrid border
}
*/

.cell.clue {
  font-weight: bold;
  color: #333;
  background-color: #f0f0f0;
  cursor: default;
}
.cell.user-filled .value {
  color: #007bff;
}
.cell .value.incorrect {
  color: #dc3545;
  text-decoration: line-through;
}
.cell .value.hint {
  color: #28a745;
  opacity: 1;
  font-weight: bold;
}
.small-hint {
  font-size: 0.8em;
  font-weight: bold;
  color: #28a745;
  position: absolute;
  top: 2px;
  right: 3px;
}
.cell.selected {
  outline: 2px solid #007bff;
  outline-offset: -2px;
  z-index: 10;
}
.cell.highlight-row,
.cell.highlight-col,
.cell.highlight-subgrid {
  /* background-color: rgba(151, 192, 255, 0.3); */ 
  /* COMMENT OUT or REMOVE if FlippingCell.css handles this */
  transform: scale(1.1); /* NEW: Scale up highlighted cells */
}
.cell.hovered-cell {
  /* background-color: rgba(104, 195, 255, 0.6); */ /* COMMENT OUT or REMOVE */
  /* z-index: 5; */ 
  /* FlippingCell.css handles its own z-index for faces if needed */
  transform: scale(1.15); /* NEW: Scale up hovered cell even more */
} 
/* Responsive Adjustments */
@media (max-width: 768px) {
  #game-area {
    padding: 15px;
  }
  #canvas-container {
    width: 90vw; /* Use viewport width */
    height: 90vw; /* Maintain square */
  }
  #bottom-controls {
    flex-direction: column; /* Stack buttons on smaller screens */
    gap: 12px;
  }
  #bottom-controls .glossy-button {
    width: 70%;
    max-width: 300px; /* Max width for stacked buttons */
  }
}

@media (max-width: 480px) {
  body {
    padding: 10px;
  }
  .app-container {
    gap: 15px;
  }
  #top-bar .glossy-button {
    font-size: 0.8em;
    padding: 8px 10px;
  }
  .timer-display {
    font-size: 1em;
    padding: 8px 10px;
    border-radius: 10px;
  }
  #game-area {
    padding: 10px;
  }
  #message-area {
    font-size: 18px;
  }
  #bottom-controls .glossy-button {
    padding: 10px 20px;
    font-size: 0.9em;
    width: 80%;
  }
  .glossy-button,
  .glossy-select {
    font-size: 13px;
    padding: 8px 14px;
  }
  .small-hint {
    font-size: 0.7em;
  }
  .lock-icon-container {
    top: 1px;
    right: 1px;
    font-size: 9px;
  }
}

/* Lock Icon Styles */
.lock-icon-container {
  position: absolute;
  top: 2px; /* Adjusted for potential small-hint */
  right: 2px; /* Adjusted for potential small-hint */
  width: 16px;
  height: 16px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  font-size: 10px; /* Size of the lock emoji/character */
  z-index: 2; /* Above cell content, below selected outline potentially */
  user-select: none; /* Prevent text selection of the icon */
  transition: opacity 0.2s ease-in-out;
}

.lock-icon-container.is-inactive-lock {
  opacity: 0.3;
}

.lock-icon-container.is-inactive-lock:hover {
  opacity: 0.7;
}

.lock-icon-container.is-active-lock {
  opacity: 1;
}

/* Locked Cell Style */
.cell.locked {
  /* Using inset box-shadow to avoid layout shifts and conflict with subgrid borders */
  box-shadow: inset 0 0 0 2px #0056b3; /* A darker blue for locked state */
}
